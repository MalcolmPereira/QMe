apply plugin: 'java' 
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

buildscript {
	ext {
		javaVersion 		= "1.8"
		javaMailVersion		= "1.5.3"
		jafVersion			= "1.1.1"
		springVersion 		= "4.1.6.RELEASE"
		springBootVersion   = '1.2.3.RELEASE'
		springHateosVersion = "0.17.0.RELEASE"
		jsonpathVersion     = "2.0.0"
	}
    repositories {
    	mavenCentral()
        mavenLocal()
		maven {
    		url "http://repo.spring.io/plugins-release"
        }
	}
	dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}

dependencies {
	compile project(':qmecore')
	compile project(':qmespringds')
	compile project(':qmesecurity')
	
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: "spring-boot-starter-tomcat"
		exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}"){
		exclude module: "logback-classic"
	}
	compile("org.springframework:spring-core:${springVersion}")
	compile("org.springframework:spring-context-support:${springVersion}")
	compile("org.springframework:spring-test:${springVersion}")
	compile("org.springframework:spring-webmvc:${springVersion}")
	compile("org.springframework.hateoas:spring-hateoas:${springHateosVersion}")
	compile("org.springframework:spring-context:${springVersion}")
	compile("org.springframework:spring-beans:${springVersion}")
	compile("org.springframework:spring-aop:${springVersion}")

	compile("javax.mail:javax.mail-api:${javaMailVersion}")
	compile("com.sun.mail:javax.mail:${javaMailVersion}")
	compile("javax.activation:activation:${jafVersion}")

    testCompile("com.jayway.jsonpath:json-path:${jsonpathVersion}")
}

bootRun {
	systemProperties = System.properties
}