buildscript {
	ext {
		springBootVersion       = '1.2.5.RELEASE'
        springHateosVersion     = "0.19.0.RELEASE"
        javaMailVersion		    = "1.5.3"
        jafVersion			    = "1.1.1"
        jsonpathVersion         = "2.0.0"
	}
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
    repositories {
        maven {
            url "http://repo.spring.io/plugins-release"
        }
        maven {
            url "http://repo.spring.io/milestone"
        }
        maven {
            url "http://repo.spring.io/release"
        }
        mavenCentral()
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

dependencies {
	compile project(':qmecore')
	compile project(':qmespringds')
	compile project(':qmesecurity')

    compile("org.springframework:spring-web:${springVersion}")
    compile("org.springframework:spring-webmvc:${springVersion}")
    compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-context-support:${springVersion}")
    compile("org.springframework:spring-test:${springVersion}")

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: "spring-boot-starter-tomcat"
		exclude module: "logback-classic"
        exclude module: "spring-core"
        exclude module: "spring-beans"
        exclude module: "spring-aop"
        exclude module: "spring-tx"
        exclude module: "spring-context"
        exclude module: "spring-context-support"
        exclude module: "spring-web"
        exclude module: "spring-webmvc"
    }

    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}"){
        exclude module: "logback-classic"
    }

    compile("org.springframework.hateoas:spring-hateoas:${springHateosVersion}"){
        exclude module: "spring-core"
        exclude module: "spring-beans"
        exclude module: "spring-aop"
        exclude module: "spring-tx"
        exclude module: "spring-context"
        exclude module: "spring-context-support"
        exclude module: "spring-web"
        exclude module: "spring-webmvc"
    }


	compile("javax.mail:javax.mail-api:${javaMailVersion}")
	compile("com.sun.mail:javax.mail:${javaMailVersion}")
	compile("javax.activation:activation:${jafVersion}")

    testCompile("com.jayway.jsonpath:json-path:${jsonpathVersion}")
}

bootRun {
	systemProperties = System.properties
}